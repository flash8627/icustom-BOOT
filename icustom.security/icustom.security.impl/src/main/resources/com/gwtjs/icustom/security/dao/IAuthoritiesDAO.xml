<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gwtjs.icustom.security.dao.IAuthoritiesDAO">
	
	
	<cache eviction="LRU" flushInterval="60000" size="1024" readOnly="false" />
	<!-- eviction是缓存的淘汰算法，可选值有"LRU"、"FIFO"、"SOFT"、"WEAK"，缺省值是LRU flashInterval指缓存过期时间，单位为毫秒，60000即为60秒，缺省值为空，即只要容量足够，永不过期 
		size指缓存多少个对象，默认值为1024 readOnly是否只读，如果为true，则所有相同的sql语句返回的是同一个对象（有助于提高性能，但并发操作同一条数据时，可能不安全），如果设置为false，则相同的sql，后面访问的是cache的clone副本。 -->
	
	<select id="getSysAuthorities" resultType="string">
		SELECT AUTH_NAME FROM SYS_AUTHORITIES_T T WHERE T.VALID_FLAG=1 
	</select>
	
	<select id="getByPathAuthorities" resultType="com.gwtjs.icustom.security.entity.SysAuthoritiesVO">
		SELECT
		<include refid="Base_Column_List" />
		FROM SYS_AUTHORITIES_T T1 
		where T1.VALID_FLAG=1 
			AND T1.AUTH_NAME = #{authName,jdbcType=VARCHAR}
			AND T1.AUTH_CODE = #{authCode,jdbcType=VARCHAR}
			AND T1.PARENT_ID = #{parentId,jdbcType=NUMERIC}
	</select>
	
	<select id="findByItem" resultType="com.gwtjs.icustom.security.entity.SysAuthoritiesVO">
		SELECT
		<include refid="Base_Column_List" />
		FROM SYS_AUTHORITIES_T T1 
		where T1.VALID_FLAG=1 
			AND T1.AUTH_NAME = #{authName,jdbcType=VARCHAR}
	</select>
	
	<select id="findItem" resultType="com.gwtjs.icustom.security.entity.SysAuthoritiesVO">
		SELECT
		<include refid="Base_Column_List" />
		FROM SYS_AUTHORITIES_T T1 
		where T1.VALID_FLAG=1 AND T1.AUTH_ID = #{authId,jdbcType=NUMERIC}
	</select>
	
	<select id="findAuthoritiesTree" resultType="com.gwtjs.icustom.security.entity.SysAuthoritiesVO">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		SYS_AUTHORITIES_T T1
		where T1.VALID_FLAG=1 
			AND T1.PARENT_ID = #{parentId,jdbcType=NUMERIC}
		ORDER BY T1.ORDER_CODE ASC 
	</select>
	
	<sql id="Base_Column_List">
		AUTH_ID 		 id,
		AUTH_NAME 		 text,
		AUTH_ID 		 authId,
		AUTH_NAME        authName,   
		AUTH_CODE        authCode,    
		AUTH_DESC        authDesc,
		ENABLED          enabled, 
		ISSYS            issys,
		PARENT_ID 		 parentId,
		ATTRIBUTE1       attribute1,
		ATTRIBUTE2       attribute2,
		ATTRIBUTE3       attribute3,
		ATTRIBUTE4       attribute4,
		ATTRIBUTE5       attribute5,
		ATTRIBUTE6       attribute6,
		ATTRIBUTE7       attribute7,
		ATTRIBUTE8       attribute8,
		ATTRIBUTE9       attribute9,
		ATTRIBUTE10      attribute10,  
		ORDER_CODE orderCode,
		(nvl((select TU.USER_NAME userName FROM SYS_USERS_T TU WHERE TU.USER_ID = to_char(T1.CREATED_USER)),T1.CREATED_USER) ) nameCn,
		(nvl((select TU.USER_NAME userName FROM SYS_USERS_T TU WHERE TU.USER_ID = to_char(T1.UPDATE_LAST_USER)),T1.UPDATE_LAST_USER) ) lastNameCn,
		(decode((select count(1) FROM SYS_AUTHORITIES_T TC WHERE TC.PARENT_ID = T1.AUTH_ID),0,0,1)) leaf,
		(decode((select count(1) FROM SYS_AUTHORITIES_T TC WHERE TC.PARENT_ID = T1.AUTH_ID),0,'', '[]' )) children,
		(decode((select count(1) FROM SYS_AUTHORITIES_T TC WHERE TC.PARENT_ID = T1.AUTH_ID),0,'', 'closed' )) state,
		CREATED_USER createdUser,
		CREATED_DATE createdDate,
		UPDATE_LAST_USER updateLastUser,
		UPDATE_LAST_DATE updateLastDate
	</sql>

	<sql id="page_st">
		SELECT * FROM (
		SELECT TT.* , ROWNUM RN FROM (
	</sql>
	<sql id="page_et">
		) TT
		<![CDATA[
		) WHERE RN<=#{1.endIndex} AND RN>=#{1.startIndex}
		]]>
	</sql>
	
	<select id="findAuthoritiesList" parameterType="hashmap"
		resultType="com.gwtjs.icustom.security.entity.SysAuthoritiesVO">
		<include refid="page_st" />
		SELECT
		<include refid="Base_Column_List" />
		FROM SYS_AUTHORITIES_T T1
		where T1.VALID_FLAG=1
		<include refid="select_cond" />
		ORDER BY AUTH_ID DESC 
		<!-- <if test="#{1.order != null}"> order by #{1.order} asc </if> -->
		<include refid="page_et" />
	</select>

	<select id="findAuthoritiesListCount" resultType="INTEGER">
		SELECT
		COUNT(1)
		FROM SYS_AUTHORITIES_T T1
		where T1.VALID_FLAG=1
		<include refid="select_cond" />
	</select>

	<sql id="select_cond">
		<if test='_parameter.get("0").authName != null'>
			AND T1.AUTH_NAME LIKE ('%'||#{0.authName,jdbcType=VARCHAR}||'%')
		</if>
		<if test='_parameter.get("0").authCode != null'>
			AND T1.AUTH_CODE LIKE ('%'||#{0.authCode,jdbcType=VARCHAR}||'%')
		</if>
		<if test='_parameter.get("0").authDesc != null'>
			AND T1.AUTH_DESC LIKE ('%'||#{0.authDesc,jdbcType=VARCHAR}||'%')
		</if>
		<if test='_parameter.get("0").createdDate != null'>
			AND T1.CREATED_DATE <![CDATA[>=]]> TO_CHAR(#{0.createdDate,jdbcType=DATE},'YYYY-MM-DD HH24:MI:SS')
		</if>
		<if test='_parameter.get("0").createdDate != null'>
			AND T1.CREATED_DATE <![CDATA[<=]]> TO_CHAR(#{0.createdDate,jdbcType=DATE},'YYYY-MM-DD HH24:MI:SS')
		</if>

	</sql>

	<!-- batch action -->

	<delete id="batchRemovePks" parameterType="java.util.List">
		DELETE FROM SYS_AUTHORITIES_T WHERE AUTH_ID in 
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item.authId}
		</foreach>
	</delete>
	
	<!-- batchUpdate -->
	<update id="batchUpdate">
		declare
		<if test="list!=null and !list.isEmpty()">
			begin
			<foreach collection="list" item="item">
				UPDATE
				SYS_AUTHORITIES_T
				SET
					AUTH_NAME  =  #{item.authName,jdbcType=VARCHAR},  
					AUTH_CODE  =  #{item.authCode,jdbcType=VARCHAR}, 
					AUTH_DESC  =  #{item.authDesc,jdbcType=VARCHAR},
					PARENT_ID  =  #{item.parentId,jdbcType=NUMERIC},
					ENABLED   =   #{item.enabled,jdbcType=INTEGER},
					ISSYS    =   #{item.issys,jdbcType=INTEGER},
					ATTRIBUTE1 = #{item.attribute1,jdbcType=VARCHAR},
					ATTRIBUTE2 = #{item.attribute2,jdbcType=VARCHAR},
					ATTRIBUTE3 = #{item.attribute3,jdbcType=VARCHAR},
					ATTRIBUTE4 = #{item.attribute4,jdbcType=VARCHAR},
					ATTRIBUTE5 = #{item.attribute5,jdbcType=VARCHAR},
					ATTRIBUTE6 = #{item.attribute6,jdbcType=VARCHAR},
					ATTRIBUTE7 = #{item.attribute7,jdbcType=VARCHAR},
					ATTRIBUTE8 = #{item.attribute8,jdbcType=VARCHAR},
					ATTRIBUTE9 = #{item.attribute9,jdbcType=VARCHAR},
					ATTRIBUTE10 = #{item.attribute10,jdbcType=VARCHAR},
					ORDER_CODE = #{item.orderCode,jdbcType=INTEGER},
					UPDATE_LAST_USER = #{item.updateLastUser,jdbcType=NUMERIC},
					UPDATE_LAST_DATE = SYSDATE 
				where AUTH_ID = #{item.authId,jdbcType=NUMERIC};
			</foreach>
			end;
		</if>
	</update>

	<insert id="batchInsert">
		declare
		<if test="list!=null and !list.isEmpty()">
			begin
			<foreach collection="list" item="item">
				INSERT into
				SYS_AUTHORITIES_T
				(
					AUTH_ID, 
					AUTH_NAME,  
					AUTH_CODE, 
					AUTH_DESC,
					PARENT_ID,
					ENABLED,
					ISSYS,  
					ATTRIBUTE1,
					ATTRIBUTE2,
					ATTRIBUTE3,
					ATTRIBUTE4,
					ATTRIBUTE5,
					ATTRIBUTE6,
					ATTRIBUTE7,
					ATTRIBUTE8,
					ATTRIBUTE9,
					ATTRIBUTE10,
					ORDER_CODE,
					CREATED_USER,
					CREATED_DATE,
					UPDATE_LAST_USER,
					UPDATE_LAST_DATE,
					VALID_FLAG
				)
				values
				(
					SYS_AUTHORITIES_S.NEXTVAL,        
					#{item.authName,jdbcType=VARCHAR},
					#{item.authCode,jdbcType=VARCHAR},
					#{item.authDesc,jdbcType=VARCHAR},
					#{item.parentId,jdbcType=NUMERIC},
					#{item.enabled,jdbcType=INTEGER},
					#{item.issys,jdbcType=INTEGER},
					#{item.attribute1,jdbcType=VARCHAR},
					#{item.attribute2,jdbcType=VARCHAR},
					#{item.attribute3,jdbcType=VARCHAR},
					#{item.attribute4,jdbcType=VARCHAR},
					#{item.attribute5,jdbcType=VARCHAR},
					#{item.attribute6,jdbcType=VARCHAR},
					#{item.attribute7,jdbcType=VARCHAR},
					#{item.attribute8,jdbcType=VARCHAR},
					#{item.attribute9,jdbcType=VARCHAR},
					#{item.attribute10,jdbcType=VARCHAR},
					#{item.orderCode,jdbcType=INTEGER},
					#{item.createdUser,jdbcType=NUMERIC},
					SYSDATE,
					#{item.updateLastUser,jdbcType=NUMERIC},
					SYSDATE,
					1
				);
			</foreach>
			end;
		</if>
	</insert>
	
</mapper>