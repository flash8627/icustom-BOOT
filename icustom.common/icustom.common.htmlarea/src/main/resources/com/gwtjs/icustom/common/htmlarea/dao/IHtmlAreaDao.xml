<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gwtjs.icustom.common.htmlarea.dao.IHtmlAreaDao">

	<sql id="queryBaseSql">
		SELECT tha.html_area_id AS htmlAreaId,
	      tha.category AS category,
	      tha.name AS name,
	      tha.description AS description,
	      tha.content AS content,
	      tha.created_by AS createdBy,
	      tha.creation_date AS creationDate,
	      tha.last_updated_by AS lastUpdatedBy,
	      tha.last_update_date AS lastUpdateDate,
	      u.user_name AS creationUserCN,
	      tha.title AS title,
	      tha.mapping_url AS mappingUrl,
	      tha.attr1 AS attr1,
	      tha.attr2 AS attr2,
	      tha.attr3 AS attr3,
	      tha.second_level_type AS secondLevelType,
	      tha.third_level_type AS thirdLevelType
	    FROM SYS_HTML_AREA_T tha
	    LEFT JOIN sys_user_t u ON tha.created_by = u.user_id
	    LEFT JOIN sys_user_t c ON tha.last_updated_by = c.user_id 
	    WHERE 1=1 
	</sql>

	<update id="saveOrUpdate">
		begin
		<foreach collection='list' item="item" index="index">
			merge into SYS_HTML_AREA_T tar
			using (
				select
					#{item.NAME,jdbcType=VARCHAR} NAME,
					#{item.MAPPING_URL,jdbcType=VARCHAR} MAPPING_URL,
					#{item.CATEGORY,jdbcType=VARCHAR} CATEGORY,
					#{item.DESCRIPTION,jdbcType=VARCHAR} DESCRIPTION,
					#{item.CONTENT,jdbcType=INTEGER} CONTENT,
					#{item.SECOND_LEVEL_TYPE,jdbcType=INTEGER} SECOND_LEVEL_TYPE,
					#{item.THIRD_LEVEL_TYPE,jdbcType=INTEGER} THIRD_LEVEL_TYPE,
					#{item.APP_NAME,jdbcType=INTEGER} APP_NAME,
					#{item.ATTR1,jdbcType=INTEGER} ATTR1,
					#{item.ATTR2,jdbcType=INTEGER} ATTR2,
					#{item.ATTR3,jdbcType=INTEGER} ATTR3,
					#{item.createdUser,jdbcType=VARCHAR} CREATED_USER,
					SYSDATE created_date,
					#{item.updateLastUser,jdbcType=NUMERIC} update_last_user,
					SYSDATE update_last_date
				from dual
			) src
			on (
				tar.NAME=src.NAME
				AND tar.MAPPING_URL=src.MAPPING_URL
				AND tar.APP_NAME=src.APP_NAME
			)
			WHEN MATCHED THEN
			UPDATE SET
				tar.NAME = src.NAME,
				tar.MAPPING_URL = src.MAPPING_URL,
				tar.CATEGORY = src.CATEGORY,
				tar.DESCRIPTION = src.DESCRIPTION,
				tar.CONTENT = src.CONTENT,
				tar.TITLE = src.TITLE,
				tar.MAPPING_URL = src.MAPPING_URL,
				tar.LAST_UPDATED_BY = src.LAST_UPDATED_BY,
				tar.update_last_date = src.update_last_date,
				tar.SECOND_LEVEL_TYPE = src.SECOND_LEVEL_TYPE,
				tar.THIRD_LEVEL_TYPE = src.THIRD_LEVEL_TYPE,
				tar.ATTR1 = src.ATTR1,
				tar.ATTR2 = src.ATTR2,
				tar.ATTR3 = src.ATTR3
			WHEN NOT MATCHED THEN
			INSERT
			(
				HTML_AREA_ID,
				CATEGORY,
				NAME,
				DESCRIPTION,
				CONTENT,
				TITLE,
				MAPPING_URL,
				SECOND_LEVEL_TYPE,
				THIRD_LEVEL_TYPE,
				APP_NAME,
				CREATED_BY,
				CREATION_DATE,
				LAST_UPDATED_BY,
				LAST_UPDATE_DATE,
				ATTR1,
				ATTR2,
				ATTR3
			) VALUES (
				SYS_HTML_AREA_S.nextval,
				CATEGORY,
				NAME,
				DESCRIPTION,
				CONTENT,
				TITLE,
				MAPPING_URL,
				SECOND_LEVEL_TYPE,
				THIRD_LEVEL_TYPE,
				APP_NAME,
				CREATED_BY,
				CREATION_DATE,
				LAST_UPDATED_BY,
				LAST_UPDATE_DATE,
				ATTR1,
				ATTR2,
				ATTR3
			);
		</foreach>
		COMMIT;
		END;
	</update>

	<select id="findAll" resultType="com.gwtjs.icustom.common.htmlarea.vo.HtmlAreaVO">
		<include refid="queryBaseSql" />
	</select>

	<select id="findByHtmlArea" resultType="com.gwtjs.icustom.common.htmlarea.vo.HtmlAreaVO">
		<include refid="queryBaseSql" />
		AND tha.html_area_id = #{htmlAreaId,jdbcType=INTEGER}
	</select>

	<select id="findHtmlAreaPageCount" resultType="int">
		SELECT
		COUNT(1)
		FROM SYS_HTML_AREA_T tha 
	    LEFT JOIN sys_user_t u ON tha.created_by = u.user_id
	    LEFT JOIN sys_user_t c ON tha.last_updated_by = c.user_id 
	    WHERE 1=1 
		<include refid="select_cond" />
	</select>

	<select id="findHtmlAreaPage" resultType="com.gwtjs.icustom.common.htmlarea.vo.HtmlAreaVO">
		<include refid="page_st" />
		<include refid="queryBaseSql" />
		<include refid="select_cond" />
		<include refid="page_et" />
	</select>
	
	<delete id="batchRemovePks" parameterType="java.util.List">
		DELETE FROM SYS_HTML_AREA_T tha 
		WHERE 1=1
		AND ( 1=2
		<foreach collection='list' item="item">
			OR tha.HTML_AREA_ID=#{item}
		</foreach>
		)
	</delete>

	<sql id="select_cond">
	
		<if
			test='_parameter.get("vo").createFromDate!=null and _parameter.get("vo").createFromDate!=""'>
			<![CDATA[and trunc(vo.CREATION_DATE) >=
			trunc(to_date(#{poInfoVO.CREATION_DATE,jdbcType=VARCHAR},'yyyy-mm-dd'))]]>
		</if>
		<if
			test='_parameter.get("vo").createToDate!=null and _parameter.get("vo").createToDate!=""'>
			<![CDATA[	and trunc(vo.CREATION_DATE) <=
			trunc(to_date(#{poInfoVO.createToDate,jdbcType=VARCHAR},'yyyy-mm-dd')) ]]>
		</if>
		
		<if
			test='_parameter.get("vo").name != null and _parameter.get("vo").name != "" and _parameter.get("vo").name != "null"'>
			AND sr.name LIKE '%#{vo.name,jdbcType=VARCHAR}%'
		</if>
		
		<if
			test='_parameter.get("vo").title != null and _parameter.get("vo").title != "" and _parameter.get("vo").title != "null"'>
			AND upper(sr.title) = upper(#{vo.title,jdbcType=VARCHAR})
		</if>
		
		<if
			test='_parameter.get("vo").content != null and _parameter.get("vo").content != "" and _parameter.get("vo").content != "null"'>
			AND sr.content LIKE '%#{vo.content,jdbcType=VARCHAR}%'
		</if>
		<if
			test='_parameter.get("vo").mapping_url != null and _parameter.get("vo").mapping_url != "" and _parameter.get("vo").mapping_url != "null"'>
			AND sr.mapping_url LIKE '%#{vo.mapping_url,jdbcType=VARCHAR}%'
		</if>
		<if
			test='_parameter.get("vo").second_level_type != null and _parameter.get("vo").second_level_type != "" and _parameter.get("vo").second_level_type != "null"'>
			AND upper(sr.second_level_type) = upper(#{vo.secondLevelType,jdbcType=VARCHAR})
		</if>
		<if
			test='_parameter.get("vo").third_level_type != null and _parameter.get("vo").third_level_type != "" and _parameter.get("vo").third_level_type != "null"'>
			AND upper(sr.third_level_type) = upper(#{vo.thirdLevelType,jdbcType=VARCHAR})
		</if>
		<if
			test='_parameter.get("vo").description != null and _parameter.get("vo").description != "" and _parameter.get("vo").description != "null"'>
			AND sr.description LIKE '%#{vo.description,jdbcType=VARCHAR}%'
		</if>
	</sql>

	<sql id="page_st">
		SELECT * FROM (
		SELECT TT.* , ROWNUM RN FROM (
	</sql>
	<sql id="page_et">
		) TT
		<![CDATA[
		) WHERE RN<=#{page.endIndex} AND RN>=#{page.startIndex}
		]]>
	</sql>

</mapper>