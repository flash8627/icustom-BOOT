<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gwtjs.icustom.htmlarea.dao.IHtmlAreaDao">

	<sql id="queryBaseSql">
		SELECT tha.html_area_id AS htmlAreaId,
	      tha.category AS category,
	      tha.name AS name,
	      tha.description AS description,
	      tha.content AS content,
	      tha.VALID_TO_DATE AS validToDate,
	      tha.VALID_FROM_DATE AS validFromDate,
	      tha.created_by AS createdBy,
	      tha.creation_date AS creationDate,
	      tha.update_last_user AS lastUpdatedBy,
	      tha.update_last_date AS lastUpdateDate,
	      u.user_name AS creationUserCN,
	      tha.title AS title,
	      tha.mapping_url AS mappingUrl,
	      tha.PROGRAM_FILTER_ENABLE AS programFilterEnable,
	      tha.attribute1 AS attribute1,
	      tha.attribute2 AS attribute2,
	      tha.attribute3 AS attribute3,
	      tha.second_level_type AS secondLevelType,
	      tha.third_level_type AS thirdLevelType
	    FROM SYS_HTML_AREA_T tha
	    LEFT JOIN sys_user_t u ON tha.created_by = u.user_id
	    LEFT JOIN sys_user_t c ON tha.update_last_user = c.user_id 
	    WHERE 1=1 
	</sql>

	<update id="saveOrUpdate" keyProperty="htmlAreaId">
		begin
		<foreach collection='list' item="item" index="index">
			merge into SYS_HTML_AREA_T tar 
			using (
				select
					#{item.htmlAreaId,jdbcType=VARCHAR} HTML_AREA_ID,
					#{item.name,jdbcType=VARCHAR} NAME,
					#{item.title,jdbcType=VARCHAR} TITLE,
					#{item.mappingUrl,jdbcType=VARCHAR} MAPPING_URL,
					#{item.content,jdbcType=CLOB} CONTENT,
					#{item.category,jdbcType=VARCHAR} CATEGORY,
					#{item.programFilterEnable,jdbcType=INTEGER} PROGRAM_FILTER_ENABLE,
					#{item.validFromDate,jdbcType=DATE} VALID_FROM_DATE,
					#{item.validToDate,jdbcType=DATE} VALID_TO_DATE,
					#{item.description,jdbcType=VARCHAR} DESCRIPTION,
					#{item.secondLevelType,jdbcType=INTEGER} SECOND_LEVEL_TYPE,
					#{item.thirdLevelType,jdbcType=INTEGER} THIRD_LEVEL_TYPE,
					#{item.attribute1,jdbcType=VARCHAR} attribute1,
					#{item.attribute2,jdbcType=VARCHAR} attribute2,
					#{item.attribute3,jdbcType=VARCHAR} attribute3,
					#{item.createdUser,jdbcType=NUMERIC} CREATED_BY,
					#{item.updateLastUser,jdbcType=NUMERIC} update_last_user
				from dual
			) src
			on (
				tar.HTML_AREA_ID=src.HTML_AREA_ID OR tar.MAPPING_URL=src.MAPPING_URL
				/*AND tar.MAPPING_URL=src.MAPPING_URL
				AND tar.NAME=src.NAME*/
			)
			WHEN MATCHED THEN
			UPDATE SET
				/*tar.MAPPING_URL = src.MAPPING_URL,*/
				tar.NAME = src.NAME,
				tar.TITLE = src.TITLE,
				tar.CONTENT = src.CONTENT,
				tar.CATEGORY = src.CATEGORY,
				tar.DESCRIPTION = src.DESCRIPTION,
				tar.update_last_user = src.update_last_user,
				tar.VALID_FROM_DATE = src.VALID_FROM_DATE,
				tar.VALID_TO_DATE = src.VALID_TO_DATE,
				tar.update_last_date = SYSDATE,
				tar.SECOND_LEVEL_TYPE = src.SECOND_LEVEL_TYPE,
				tar.THIRD_LEVEL_TYPE = src.THIRD_LEVEL_TYPE,
				tar.PROGRAM_FILTER_ENABLE = src.PROGRAM_FILTER_ENABLE,
				tar.attribute1 = src.attribute1,
				tar.attribute2 = src.attribute2,
				tar.attribute3 = src.attribute3
			WHEN NOT MATCHED THEN
			INSERT
			(
				HTML_AREA_ID,
				CATEGORY,
				NAME,
				DESCRIPTION,
				CONTENT,
				TITLE,
				MAPPING_URL,
				PROGRAM_FILTER_ENABLE,
				SECOND_LEVEL_TYPE,
				THIRD_LEVEL_TYPE,
				APP_NAME,
				VALID_FROM_DATE,
				VALID_TO_DATE,
				CREATED_BY,
				CREATION_DATE,
				update_last_user,
				update_last_date,
				attribute1,
				attribute2,
				attribute3
			) VALUES (
				SYS_HTML_AREA_S.nextval,
				src.CATEGORY,
				src.NAME,
				src.DESCRIPTION,
				src.CONTENT,
				src.TITLE,
				src.MAPPING_URL,
				src.PROGRAM_FILTER_ENABLE,
				src.SECOND_LEVEL_TYPE,
				src.THIRD_LEVEL_TYPE,
				null,
				src.VALID_FROM_DATE,
				src.VALID_TO_DATE,
				src.CREATED_BY,
				SYSDATE,
				src.update_last_user,
				SYSDATE,
				src.attribute1,
				src.attribute2,
				src.attribute3
			);
		</foreach>
		null;
		END;
	</update>

	<select id="findAll" resultType="com.gwtjs.icustom.htmlarea.vo.HtmlAreaVO">
		<include refid="queryBaseSql" />
	</select>

	<select id="findHtmlArea" resultType="com.gwtjs.icustom.htmlarea.vo.HtmlAreaVO">
		<include refid="queryBaseSql" />
		AND tha.html_area_id = #{htmlAreaId,jdbcType=INTEGER}
	</select>
	
	<select id="findHtmlAreaByMappingUrl" resultType="com.gwtjs.icustom.htmlarea.vo.HtmlAreaVO">
		<include refid="queryBaseSql" />
		AND tha.mapping_url = #{mappingUrl,jdbcType=VARCHAR}
	</select>

	<select id="findHtmlAreaPageCount" resultType="int">
		SELECT
		COUNT(1)
		FROM SYS_HTML_AREA_T tha 
	    LEFT JOIN sys_user_t u ON tha.created_by = u.user_id 
	    LEFT JOIN sys_user_t c ON tha.update_last_user = c.user_id 
	    WHERE 1=1 
		<include refid="select_cond" />
	</select>

	<select id="findHtmlAreaPage" resultType="com.gwtjs.icustom.htmlarea.vo.HtmlAreaVO">
		<include refid="page_st" />
		<include refid="queryBaseSql" />
		<include refid="select_cond" />
		<include refid="page_et" />
	</select>
	
	<delete id="batchRemovePks" parameterType="java.util.List">
		BEGIN
		DELETE FROM SYS_HTML_AREA_T tha 
		WHERE 1=1
		AND ( 1=2
		<foreach collection='list' item="item">
			OR tha.HTML_AREA_ID=#{item.htmlAreaId,jdbcType=INTEGER}
		</foreach>
		);
		null;
		end;
	</delete>

	<sql id="select_cond">
	
		<if
			test='_parameter.get("vo").createFromDate!=null and _parameter.get("vo").createFromDate!=""'>
			<![CDATA[and date(VALID_FROM_DATE) >= date(#{vo.createFromDate,jdbcType=TIMESTAMP})]]>
		</if>
		<if
			test='_parameter.get("vo").createToDate!=null and _parameter.get("vo").createToDate!=""'>
			<![CDATA[and date(VALID_TO_DATE) <= date(#{vo.createToDate,jdbcType=TIMESTAMP}) ]]>
		</if>
		
		<if
			test='_parameter.get("vo").name != null and _parameter.get("vo").name != "" and _parameter.get("vo").name != "null"'>
			AND tha.name LIKE '%#{vo.name,jdbcType=VARCHAR}%'
		</if>
		
		<if
			test='_parameter.get("vo").title != null and _parameter.get("vo").title != "" and _parameter.get("vo").title != "null"'>
			AND upper(tha.title) = upper(#{vo.title,jdbcType=VARCHAR})
		</if>
		
		<if
			test='_parameter.get("vo").content != null and _parameter.get("vo").content != "" and _parameter.get("vo").content != "null"'>
			<!-- AND tha.content LIKE '%#{vo.content,jdbcType=CLOB,javaType=java.lang.String}%' -->
			AND tha.content LIKE '%#{vo.content}%'
		</if>
		<if
			test='_parameter.get("vo").mappingUrl != null and _parameter.get("vo").mappingUrl != "" and _parameter.get("vo").mappingUrl != "null"'>
			AND tha.mapping_url LIKE '%#{vo.mapping_url,jdbcType=VARCHAR}%'
		</if>
		<if
			test='_parameter.get("vo").secondLevelType != null and _parameter.get("vo").secondLevelType != "" and _parameter.get("vo").secondLevelType != "null"'>
			AND upper(tha.second_level_type) = upper(#{vo.secondLevelType,jdbcType=VARCHAR})
		</if>
		<if
			test='_parameter.get("vo").thirdLevelType != null and _parameter.get("vo").thirdLevelType != "" and _parameter.get("vo").thirdLevelType != "null"'>
			AND upper(tha.third_level_type) = upper(#{vo.thirdLevelType,jdbcType=VARCHAR})
		</if>
		<if
			test='_parameter.get("vo").description != null and _parameter.get("vo").description != "" and _parameter.get("vo").description != "null"'>
			AND tha.description LIKE '%#{vo.description,jdbcType=VARCHAR}%'
		</if>
	</sql>

	<sql id="page_st">
		SELECT * FROM (
		SELECT TT.* , ROWNUM RN FROM (
	</sql>
	<sql id="page_et">
		) TT
		<![CDATA[
		) WHERE RN<=#{page.endIndex} AND RN>=#{page.startIndex}
		]]>
	</sql>

</mapper>